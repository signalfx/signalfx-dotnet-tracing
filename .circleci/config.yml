version: 2.1

orbs:
  win: circleci/windows@2.2.0

general:
  branches:
    ignore:
      - next-ver

jobs:
  Alpine:
    machine:
      image: ubuntu-1604:202007-01
    environment:
      buildConfiguration: Release
    steps:
      - checkout
      - run: docker-compose run build
      - run: docker-compose run Profiler.Alpine
      - run: docker-compose run package.alpine
      - run: mkdir artifacts
      - run: cp -a deploy/linux/. artifacts/
      - store_artifacts:
          path: artifacts
      - persist_to_workspace:
          root: .
          paths:
              - artifacts

  Linux:
    machine:
      image: ubuntu-1604:202007-01
    environment:
      buildConfiguration: Release
    steps:
      - checkout
      - run: docker-compose run build
      - run: docker-compose run Profiler
      - run: docker-compose run package
      - run: mkdir artifacts
      - run: cp -a deploy/linux/. artifacts/
      - store_artifacts:
          path: artifacts
      - persist_to_workspace:
          root: .
          paths:
              - artifacts

  Windows:
    executor: 
      name: win/default
      shell: cmd.exe
    steps:
      - checkout
      - run: dotnet --list-sdks
      - run: choco install wixtoolset
      - run: nuget restore Datadog.Trace.sln
      - run: msbuild Datadog.Trace.proj /t:BuildCsharp /p:Configuration=Release
      - run: dotnet pack -c Release -o src\bin\SignalFx.Tracing src\Datadog.Trace\Datadog.Trace.csproj
      - run: dotnet pack -c Release -o src\bin\SignalFx.Tracing.OpenTracing src\Datadog.Trace.OpenTracing\Datadog.Trace.OpenTracing.csproj
      - run: msbuild Datadog.Trace.proj /t:BuildCpp /p:Configuration=Release;Platform=x64
      - run: msbuild Datadog.Trace.proj /t:BuildCpp /p:Configuration=Release;Platform=x86
      - run: msbuild Datadog.Trace.proj /t:msi /p:Configuration=Release;Platform=x64
      - run: msbuild Datadog.Trace.proj /t:msi /p:Configuration=Release;Platform=x86
      - run: msbuild Datadog.Trace.proj /t:CreateHomeDirectory /p:Configuration=Release;Platform=x64
      - run: nuget pack -p NoWarn=NU5100;NoBuild=true;NoDefaultExcludes=true -OutputDirectory src\bin\Azure.Site.Extension deploy\Azure.Site.Extension\Azure.Site.Extension.nuspec
      - run: mkdir artifacts
      - run: cp -r deploy/Datadog.Trace.ClrProfiler.WindowsInstaller/bin/Release/x64/en-us/* artifacts
      - run: cp -r deploy/Datadog.Trace.ClrProfiler.WindowsInstaller/bin/Release/x86/en-us/* artifacts
      - run: cp src/bin/windows-tracer-home.zip artifacts/
      - run: cp -r src/bin/Azure.Site.Extension/* artifacts
      - run: cp -r src/bin/SignalFx.Tracing/* artifacts
      - run: cp -r src/bin/SignalFx.Tracing.OpenTracing/* artifacts
      - store_artifacts:
          path: artifacts
      - persist_to_workspace:
          root: .
          paths:
              - artifacts

  PublishRelease:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./artifacts/

  PublishNuGetPackages:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish NuGet Packages"
          command: |
            for i in ./artifacts/*.nupkg; do dotnet nuget push $i --source "${NUGET_FEED_URL}" --api-key ${NUGET_KEY}; done
           
workflows:
  version: 2
  build:
    jobs:
      - Alpine:
          filters:
            tags:
              only: /.*/ # this assures that the step will be run when the tag is pushed
      - Linux:
          filters:
            tags:
              only: /.*/
      - Windows:
          filters:
            tags:
              only: /.*/
      - PublishRelease:
          requires:
            - Alpine
            - Linux
            - Windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - PublishNuGetPackages:
          requires:
            - Alpine
            - Linux
            - Windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

