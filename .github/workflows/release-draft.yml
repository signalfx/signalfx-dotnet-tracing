name: Release draft

on:
  push:
    tags:
    - 'v*'

jobs:
  linux_build:
    name: Linux Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        baseImage: [alpine, debian]
    timeout-minutes: 30
    env:
      baseImage: ${{ matrix.baseImage }}
      dotnetSdkVersion: 7.0.101
    steps:
    - uses: actions/checkout@v3.5.2
    - name: Build Docker image
      run: |
        docker build \
          --build-arg DOTNETSDK_VERSION=${dotnetSdkVersion} \
          --tag dd-trace-dotnet/${baseImage}-builder \
          --target builder \
          --file "./tracer/build/_build/docker/${baseImage}.dockerfile" \
          "./tracer/build/_build"
    - name: Run 'Clean BuildTracerHome ZipMonitoringHome' in Docker
      run: |
        docker run --rm \
          --mount type=bind,source="${GITHUB_WORKSPACE}",target=/project \
          --env NugetPackageDirectory=/project/packages \
          --env tracerHome=/shared/bin/monitoring-home/tracer \
          --env artifacts=/project/tracer/src/bin/artifacts \
          dd-trace-dotnet/${baseImage}-builder \
          dotnet /build/bin/Debug/_build.dll Clean BuildTracerHome ZipMonitoringHome
    - name: Upload Linux x64 packages
      uses: actions/upload-artifact@v3.1.2
      with:
        name: artifacts
        path: ./tracer/src/bin/artifacts/linux-x64

  windows_build:
    name: Windows Build
    runs-on: windows-2022
    timeout-minutes: 30
    steps:
      - run: git config --system core.longpaths true
      - uses: actions/checkout@v3.5.2
      - uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: | 
            2.1.818
            3.1.426
            5.0.408
            6.0.404
            7.0.101
      - run: tracer\build.cmd Clean BuildTracerHome PackageTracerHome
        shell: cmd
      - name: Upload Windows MSI
        uses: actions/upload-artifact@v3.1.2
        with:
          name: artifacts
          path: |
            tracer/bin/artifacts/*/en-us
            Splunk.SignalFx.DotNet.psm1
      - name: Upload NuGet packages
        uses: actions/upload-artifact@v3.1.2
        with:
          name: nuget
          path: tracer/bin/artifacts/nuget/SignalFx.NET.Tracing.Azure.Site.Extension.*.nupkg
      - name: Upload Windows Zip package
        uses: actions/upload-artifact@v3.1.2
        with:
          name: zip
          path: tracer/bin/artifacts/signalfx-dotnet-tracing-*.zip

  create-release:
    name: Create GH release
    runs-on: ubuntu-20.04
    needs: [ linux_build, windows_build ]
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: actions/download-artifact@v3.0.2
        with:
          path: .
      - name: Extract Version from Tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v}
      - name: Create Release
        run: gh release create v${{ steps.get_version.outputs.VERSION }} --draft artifacts/*.psm1 artifacts/signalfx* artifacts/tracer/bin/artifacts/x64/en-us/*.msi  artifacts/tracer/bin/artifacts/x86/en-us/*.msi zip/signalfx-dotnet-tracing-*.zip nuget/SignalFx.NET.Tracing.Azure.Site.Extension.*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
