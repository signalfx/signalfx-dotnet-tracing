[
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: ,
    Frames: [
      System.Threading.Thread.Sleep(System.Int32),
      System.Threading.Thread.Sleep(System.TimeSpan),
      Samples.AlwaysOnProfiler.Fs.ClassFs.methodFs(System.String),
      Samples.AlwaysOnProfiler.Vb.ClassVb.MethodVb(System.String),
      My.Custom.Test.Namespace.TestDynamicClass.TryInvoke(System.Dynamic.InvokeBinder, System.Object[], System.Object&),
      System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid3[T0, T1, T2](System.Runtime.CompilerServices.CallSite, T0, T1, T2),
      My.Custom.Test.Namespace.ClassENonStandardCharactersĄĘÓŁŻŹĆąęółżźśćĜЖᏳⳄʤǋₓڿଟഐቐ〣‿੮ᾭ_`1.GenericMethodDFromGenericClass[TMethod, TMethod2](TClass, TMethod, TMethod2),
      My.Custom.Test.Namespace.ClassD`21.MethodD(T01, T02, T03, T04, T05, T06, T07, T08, T09, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, Unknown),
      My.Custom.Test.Namespace.GenericClassC`1.GenericMethodCFromGenericClass[T01, T02, T03, T04, T05, T06, T07, T08, T09, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](T01, T02, T03, T04, T05, T06, T07, T08, T09, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, Unknown),
      My.Custom.Test.Namespace.GenericClassC`1.GenericMethodCFromGenericClass(T),
      My.Custom.Test.Namespace.ClassA.InternalClassB`2.DoubleInternalClassB.TripleInternalClassB`1.MethodB[TB](System.String, TC[], TB, TD, System.Collections.Generic.IList`1[TA], System.Collections.Generic.IList`1[System.String]),
      My.Custom.Test.Namespace.ClassA.<MethodAOthers>g__Action|4_0[T](System.String),
      My.Custom.Test.Namespace.ClassA.MethodAOthers[T](System.String, System.Object, My.Custom.Test.Namespace.CustomClass, My.Custom.Test.Namespace.CustomStruct, My.Custom.Test.Namespace.CustomClass[], My.Custom.Test.Namespace.CustomStruct[], System.Collections.Generic.List`1[T]),
      My.Custom.Test.Namespace.ClassA.MethodAFloats(System.Single, System.Double),
      My.Custom.Test.Namespace.ClassA.MethodAInts(System.UInt16, System.Int16, System.UInt32, System.Int32, System.UInt64, System.Int64, System.IntPtr, System.UIntPtr),
      My.Custom.Test.Namespace.ClassA.MethodABytes(System.Boolean, System.Char, System.SByte, System.Byte),
      My.Custom.Test.Namespace.ClassA.MethodA(),
      Program.<Main>$(System.String[]),
      Unknown_Native_Function(unknown)
    ]
  },
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: .NET ThreadPool Worker,
    ThreadIndex: 3,
    Frames: [
      Interop.Kernel32.GetQueuedCompletionStatus(System.IntPtr, System.Int32&, System.UIntPtr&, System.IntPtr&, System.Int32),
      System.Threading.LowLevelLifoSemaphore.WaitForSignal(System.Int32),
      System.Threading.LowLevelLifoSemaphore.Wait(System.Int32, System.Boolean),
      System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart(),
      System.Threading.Thread.StartCallback(),
      Unknown_Native_Function(unknown)
    ]
  },
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: .NET ThreadPool Gate,
    ThreadIndex: 4,
    Frames: [
      System.Threading.WaitHandle.WaitOneNoCheck(System.Int32),
      System.Threading.WaitHandle.WaitOne(System.Int32),
      System.Threading.PortableThreadPool.GateThread.GateThreadStart(),
      System.Threading.Thread.StartCallback(),
      Unknown_Native_Function(unknown)
    ]
  },
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: .NET ThreadPool Worker,
    ThreadIndex: 5,
    Frames: [
      Interop.Kernel32.GetQueuedCompletionStatus(System.IntPtr, System.Int32&, System.UIntPtr&, System.IntPtr&, System.Int32),
      System.Threading.LowLevelLifoSemaphore.WaitForSignal(System.Int32),
      System.Threading.LowLevelLifoSemaphore.Wait(System.Int32, System.Boolean),
      System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart(),
      System.Threading.Thread.StartCallback(),
      Unknown_Native_Function(unknown)
    ]
  },
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: .NET ThreadPool Worker,
    ThreadIndex: 7,
    Frames: [
      Interop.Kernel32.GetQueuedCompletionStatus(System.IntPtr, System.Int32&, System.UIntPtr&, System.IntPtr&, System.Int32),
      System.Threading.LowLevelLifoSemaphore.WaitForSignal(System.Int32),
      System.Threading.LowLevelLifoSemaphore.Wait(System.Int32, System.Boolean),
      System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart(),
      System.Threading.Thread.StartCallback(),
      Unknown_Native_Function(unknown)
    ]
  },
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: .NET ThreadPool Worker,
    ThreadIndex: 8,
    Frames: [
      System.Threading.Monitor.Wait(System.Object, System.Int32),
      System.Threading.ManualResetEventSlim.Wait(System.Int32, System.Threading.CancellationToken),
      System.Threading.Tasks.Task.SpinThenBlockingWait(System.Int32, System.Threading.CancellationToken),
      System.Threading.Tasks.Task.InternalWaitCore(System.Int32, System.Threading.CancellationToken),
      System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task),
      System.Runtime.CompilerServices.TaskAwaiter`1.GetResult(),
      System.IO.Pipes.PipeStream.Read(System.Byte[], System.Int32, System.Int32),
      System.IO.Stream.Read(System.Span`1[System.Byte]),
      System.IO.Pipes.PipeStream.Read(System.Span`1[System.Byte]),
      System.IO.Pipes.PipeStream.ReadByte(),
      System.IO.BinaryReader.ReadByte(),
      Microsoft.Extensions.HotReload.UpdatePayload.<ReadAsync>d__14.MoveNext(),
      System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine&),
      StartupHook.<ReceiveDeltas>d__4.MoveNext(),
      System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine&),
      System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine&),
      StartupHook.ReceiveDeltas(Microsoft.Extensions.HotReload.HotReloadAgent, System.IO.Pipes.NamedPipeClientStream),
      StartupHook.<>c__DisplayClass1_0.<<Initialize>b__0>d.MoveNext(),
      System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine&),
      System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine&),
      StartupHook.<>c__DisplayClass1_0.<Initialize>b__0(),
      System.Threading.Tasks.Task`1.InnerInvoke(),
      System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(System.Object),
      System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(System.Threading.Thread, System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object),
      System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task&, System.Threading.Thread),
      System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread),
      System.Threading.Tasks.Task.ExecuteFromThreadPool(System.Threading.Thread),
      System.Threading.ThreadPoolWorkQueue.Dispatch(),
      System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart(),
      System.Threading.Thread.StartCallback(),
      Unknown_Native_Function(unknown)
    ]
  },
  {
    Timestamp: {
      Nanoseconds: 1649267460807000000,
      Milliseconds: 1649267460807
    },
    ManagedId: Id_1,
    ThreadName: .NET ThreadPool Worker,
    ThreadIndex: 9,
    Frames: [
      Interop.Kernel32.GetQueuedCompletionStatus(System.IntPtr, System.Int32&, System.UIntPtr&, System.IntPtr&, System.Int32),
      System.Threading.LowLevelLifoSemaphore.WaitForSignal(System.Int32),
      System.Threading.LowLevelLifoSemaphore.Wait(System.Int32, System.Boolean),
      System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart(),
      System.Threading.Thread.StartCallback(),
      Unknown_Native_Function(unknown)
    ]
  }
]