[
  {
    TraceId: Id_1,
    SpanId: Id_2,
    Name: GET /api2/throwcustomhttpcodeexception/{value},
    LogicScope: aspnet.request,
    Resource: GET /api2/throwcustomhttpcodeexception/{value},
    Service: sample,
    Type: web,
    Tags: {
      deployment.environment: integration_tests,
      http.method: GET,
      http.request.headers.host: localhost:00000,
      http.status_code: 400,
      http.url: http://localhost:00000/api2/ThrowCustomHttpCodeException/400,
      http.user_agent: testhelper,
      language: dotnet,
      net.peer.ip: 127.0.0.1,
      runtime-id: Guid_1,
      signalfx.tracing.library: dotnet-tracing,
      signalfx.tracing.version: x.y.z,
      span.kind: server,
      version: 1.0.0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_3,
    Name: GET /api2/throwcustomhttpcodeexception/{value},
    LogicScope: aspnet-webapi.request,
    Resource: GET /api2/throwcustomhttpcodeexception/{value},
    Service: sample,
    Type: web,
    ParentId: Id_2,
    Tags: {
      aspnet.action: throwcustomhttpcodeexception,
      aspnet.controller: conventions,
      aspnet.route: api2/{action}/{value},
      deployment.environment: integration_tests,
      http.method: GET,
      http.request.headers.host: localhost:00000,
      http.status_code: 400,
      http.url: http://localhost:00000/api2/ThrowCustomHttpCodeException/400,
      http.user_agent: testhelper,
      language: dotnet,
      net.peer.ip: 127.0.0.1,
      span.kind: server,
      version: 1.0.0
    }
  }
]